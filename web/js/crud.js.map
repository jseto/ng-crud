{"version":3,"file":"web/js/crud.min.js","sources":["src/clt/crud.js"],"names":["angular","module","controller","$scope","$http","$route","$location","paths","current","originalPath","split","collection","collInfo","crudMetadata","action","console","log","item","get","success","data","$parent","items","params","id","Error","httpAction","verb","extraPath","toUpperCase","path","error","status","headers","config","doSubmit","doDelete","modalId","$","on","toDelete","undefined","_id","reload","prepareDelete","idx","directive","restrict","scope","formInputScope","link","formInputLink","template","formInputHeader","formInputFooter","element","attrs","fieldMeta","$eval","listModel","templateUrl","$compile","tag","inputType","html","inputAttrs","prop","hasOwnProperty","append","filter","singularize","provider","this","$get","completeMetadataDefaults","routesForCollection","label","placeholder","model","autofocus","inputElement","find","setTimeout","focus","attr","plural","toLowerCase","length","substr","irregulars","mice","teeth","singular","warn","ucFirst","str","charAt","metadata","collName","collMeta","tableName","itemName","fieldOrder","Object","keys","fields","i","completeFieldDefaults","name","field","colLabel","cellRender","identity","showInTable","x","$routeProvider","ctrl","when"],"mappings":"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","sourcesContent":["(function() {\n\n\tangular.module('crud', ['ngRoute'])\n\n\t//------------------------- Controller -------------------------\n\n\t.controller('CrudCtrl', ['$scope', '$http', '$route', '$location',\n\t\tfunction($scope, $http, $route, $location) {\n\t\tvar paths = $route.current.originalPath.split('/');\n\t\t$scope.collection = $route.current.collection || paths[1];\n\t\t$scope.collInfo = $scope.crudMetadata[$scope.collection];\n\t\t$scope.action = $route.current.action || paths[2] || 'read';\n\t\tconsole.log('Collection:', $scope.collection, ' -  Action:', $scope.action);\n\t\tswitch ($scope.action) {\n\t\t\tcase 'create':\n\t\t\t\t$scope.item = {};\n\t\t\t\tbreak;\n\t\t\tcase 'read':\n\t\t\t\t$http.get('/data/' + $scope.collection)\n\t\t\t\t.success(function(data) {\n\t\t\t\t\t$scope.$parent.items = data.items;\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'update':\n\t\t\t\t$scope.item = $scope.$parent.items[$route.current.params.id];\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Invalid action: ' + $scope.action);\n\t\t}\n\n\t\tfunction httpAction(verb, item, extraPath) {\n\t\t\textraPath = extraPath || '';\n\t\t\treturn $http[verb]('/data/' + $scope.collection + extraPath, item)\n\t\t\t.success(function(data) {\n\t\t\t\tconsole.log(verb.toUpperCase() + ' OK: ', data);\n\t\t\t\t$location.path($scope.collection);\n\t\t\t})\n\t\t\t.error(function(data, status, headers, config) {\n\t\t\t\t//TODO report error to end user\n\t\t\t\tconsole.error(verb.toUpperCase() + ' Error: ', data, status, headers, config);\n\t\t\t});\n\t\t}\n\n\t\t$scope.doSubmit = function() {\n\t\t\tvar verb = $scope.action == 'create' ? 'post' : 'put';\n\t\t\thttpAction(verb, $scope.item);\n\t\t};\n\n\t\t$scope.doDelete = function(modalId) {\n\t\t\t$('#' + modalId).on('hidden.bs.modal', function() {\n\t\t\t\tconsole.log('Deleting ', $scope.toDelete);\n\t\t\t\thttpAction('delete', undefined, '/' + $scope.toDelete._id)\n\t\t\t\t.success(function() {\n\t\t\t\t\t$route.reload();\n\t\t\t\t});\n\t\t\t});\n\t\t};\n\n\t\t$scope.prepareDelete = function(idx) {\n\t\t\t$scope.toDelete = $scope.$parent.items[idx];\n\t\t};\n\n\t}])\n\n\n\t//------------------------- Directives -------------------------\n\n\t.directive('crudInput', function() {\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tscope: formInputScope,\n\t\t\tlink: formInputLink,\n\t\t\ttemplate: formInputHeader +\n\t\t\t\t'<input ng-model=\"model\" class=\"form-control\" id=\"{{id}}_input\" placeholder=\"{{placeholder}}\">' +\n\t\t\t\tformInputFooter\n\t\t};\n\t})\n\n\t.directive('crudTextArea', function() {\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tscope: formInputScope,\n\t\t\tlink: formInputLink,\n\t\t\ttemplate: formInputHeader +\n\t\t\t\t'<textarea ng-model=\"model\" class=\"form-control\" id=\"{{id}}_textarea\" placeholder=\"{{placeholder}}\">' +\n\t\t\t\t'</textarea>' +\n\t\t\t\tformInputFooter\n\t\t\t};\n\t})\n\n\t.directive('crudSelect', function() {\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tscope: formInputScope,\n\t\t\tlink: function(scope, element, attrs) {\n\t\t\t\tformInputLink(scope, element, attrs);\n\t\t\t\tvar fieldMeta = scope.$parent.$eval('collInfo.fields[field]');\n\t\t\t\tscope[attrs.id + '_listModel'] = fieldMeta.listModel;\n\t\t\t},\n\t\t\ttemplate: formInputHeader +\n\t\t\t\t'<select ng-model=\"model\" class=\"form-control\" id=\"{{id}}_select\"' +\n\t\t\t\t\t'ng-options=\"option.label for option in {{id}}_listModel\">' +\n\t\t\t\t'</select>' +\n\t\t\t\tformInputFooter\n\t\t};\n\t})\n\n\t.directive('crudFormButtons', function() {\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\ttemplate:\n\t\t\t\t'<div class=\"form-group\">' +\n\t\t\t\t\t'<div class=\"col-sm-12 text-center\">' +\n\t\t\t\t\t\t'<button type=\"button\" class=\"btn btn-primary\" ng-click=\"doSubmit()\">' +\n\t\t\t\t\t\t\t\"{{ action == 'create' ? 'Create' : 'Update' }}\" +\n\t\t\t\t\t\t'</button>' +\n\t\t\t\t\t\t'&nbsp;' +\n\t\t\t\t\t\t'<a href=\"#/{{collection}}\" class=\"btn btn-default\">Cancel</a>' +\n\t\t\t\t\t'</div>' +\n\t\t\t\t'</div>'\n\t\t};\n\t})\n\n\t.directive('crudTable', function() {\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\ttemplateUrl: 'templates/crud-table.html'\n\t\t};\n\t})\n\n\t// Super generic form input that compiles into the specific input as specified in field metadata\n\t.directive('crudFormInput', ['$compile', function($compile) {\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tlink: function(scope, element, attrs) {\n\t\t\t\tvar fieldMeta = scope.$eval('collInfo.fields[field]');\n\t\t\t\tvar tag = fieldMeta.inputType;\n\t\t\t\tvar html = '<' + tag + ' id=\"crud_{{field}}\" ' +\n\t\t\t\t\t'label=\"{{collInfo.fields[field].label}}\" ' +\n\t\t\t\t\t'placeholder=\"{{collInfo.fields[field].placeholder}}\" model=\"item[field]\" ' +\n\t\t\t\t\t'autofocus=\"{{ $first ? \\'true\\' : \\'false\\' }}\"';\n\t\t\t\tvar inputAttrs = fieldMeta.inputAttrs;\n\t\t\t\tfor (var prop in inputAttrs)\n\t\t\t\t\tif (inputAttrs.hasOwnProperty(prop))\n\t\t\t\t\t\thtml += ' ' + prop + '=\"' + inputAttrs[prop] + '\"';\n\t\t\t\thtml += '></' + tag + '>';\n\t\t\t\telement.append($compile(html)(scope));\n\t\t\t}\n\t\t}\n\t}])\n\n\n\t//------------------------- Filters -------------------------\n\n\t.filter('singular', function() {\n\t\treturn singularize;\n\t})\n\n\n\t//------------------------- Services -------------------------\n\n\t.provider('crud', function() {\n\t\tthis.$get = function() {\n\t\t\t// Accessible via 'crud' injected parameter\n\t\t\treturn {\n\t\t\t\tcompleteMetadataDefaults: completeMetadataDefaults\n\t\t\t}\n\t\t};\n\n\t\t// this.* is accessible via 'crudProvider' injected parameter\n\t\tthis.routesForCollection = routesForCollection;\n\t})\n\n\n\t//------------------------- Privates -------------------------\n\t;\n\n\tvar formInputScope = {\n\t\tlabel: '@',\n\t\tplaceholder: '@',\n\t\tmodel: '=',\n\t\tid: '@',\n\t\tautofocus: '@'\n\t};\n\n\tvar formInputLink = function(scope, element, attrs) {\n\t\t// Warning: this line requires jQuery, otherwise a manual search would be required\n\t\tvar inputElement = element.find('.form-control');\n\t\t// Set focus if autofocus attribute is present\n\t\tif (attrs.hasOwnProperty('autofocus') && attrs.autofocus != 'false') {\n\t\t\t// setTimeout without time parameter defers to after DOM rendering\n\t\t\tsetTimeout(function() { inputElement.focus(); });\n\t\t}\n\t\t// Copy all extra attributes into the input element\n\t\tfor (var prop in attrs)\n\t\t\tif (attrs.hasOwnProperty(prop) && prop[0]!='$' && !scope[prop])\n\t\t\t\tinputElement.attr(prop, attrs[prop]);\n\t};\n\n\tvar formInputHeader =\n\t\t'<div class=\"form-group\">' +\n\t\t\t'<label for=\"{{id}}-input\" class=\"col-sm-3 control-label\">{{label}}</label>' +\n\t\t\t\t'<div class=\"col-sm-9\">';\n\n\tvar formInputFooter = '</div></div>';\n\n\n\tfunction singularize(plural) {\n\t\tplural = plural.toLowerCase();\n\t\tif (plural[plural.length - 1] == 's')\n\t\t\treturn plural.substr(0, plural.length - 1);\n\t\t// TODO: complete with most common irregular plurals\n\t\tvar irregulars = {\n\t\t\tmice: 'mouse', teeth: 'tooth'\n\t\t}\n\t\tvar singular = irregulars[plural];\n\t\tif (!singular)\n\t\t\tconsole.warn('Warning: singular of \"', plural, '\" not found');\n\t\treturn singular ? singular : plural;\n\t}\n\n\tfunction ucFirst(str) {\n\t\treturn str.charAt(0).toUpperCase() + str.substr(1);\n\t}\n\n\tfunction completeMetadataDefaults(metadata) {\n\t\tfor (var collName in metadata)\n\t\t\tif (metadata.hasOwnProperty(collName)) {\n\t\t\t\t// Collection defaults\n\t\t\t\tvar collMeta = metadata[collName];\n\t\t\t\tcollMeta.collection = collName;\n\t\t\t\tif (!collMeta.tableName) collMeta.tableName = ucFirst(collName);\n\t\t\t\tif (!collMeta.itemName) collMeta.itemName = singularize(collName);\n\t\t\t\tif (!collMeta.fieldOrder)\n\t\t\t\t\tcollMeta.fieldOrder = Object.keys(collMeta.fields);\n\t\t\t\t// Field defaults\n\t\t\t\tfor (var i = 0; i < collMeta.fieldOrder.length; i++) {\n\t\t\t\t\tcompleteFieldDefaults(collMeta.fields, collMeta.fieldOrder[i]);\n\t\t\t\t}\n\t\t\t}\n\t}\n\n\tfunction completeFieldDefaults(fields, name) {\n\t\tvar field = fields[name];\n\t\t// Form defaults\n\t\tif (field.label === undefined) field.label = ucFirst(name);\n\t\tif (!field.inputType) field.inputType = 'crud-input';\n\t\tif (!field.inputAttrs) field.inputAttrs = {};\n\t\t// Table defaults\n\t\tif (field.colLabel === undefined) field.colLabel = field.label;\n\t\tif (!field.cellRender) field.cellRender = identity;\n\t\tif (field.showInTable === undefined) field.showInTable = true;\n\t}\n\n\tfunction identity(x) { return x }\n\n\tfunction routesForCollection($routeProvider, collection, ctrl) {\n\t\tctrl = ctrl || 'CrudCtrl';\n\t\t$routeProvider.when('/' + collection, {\n\t\t\ttemplateUrl: 'templates/crud-table-view.html',\n\t\t\tcontroller: ctrl\n\t\t})\n\t\t.when('/' + collection + '/create', {\n\t\t\ttemplateUrl: 'templates/crud-form-view.html',\n\t\t\tcontroller: ctrl\n\t\t})\n\t\t.when('/' + collection + '/update/:id', {\n\t\t\ttemplateUrl: 'templates/crud-form-view.html',\n\t\t\tcontroller: ctrl\n\t\t})\n\t}\n\n})();"]}